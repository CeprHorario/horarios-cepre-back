steps:
  # Autenticación con Secret Manager
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo DATABASE_URL=$(gcloud secrets versions access latest --secret=DATABASE_URL) >> .env
        echo DB_HOST=$(gcloud secrets versions access latest --secret=DB_HOST) >> .env
        echo DB_PORT=$(gcloud secrets versions access latest --secret=DB_PORT) >> .env
        echo DB_USER=$(gcloud secrets versions access latest --secret=DB_USER) >> .env
        echo DB_DATABASE=$(gcloud secrets versions access latest --secret=DB_DATABASE) >> .env
        echo DB_PASSWORD=$(gcloud secrets versions access latest --secret=DB_PASSWORD) >> .env
        echo GOOGLE_CLIENT_ID=$(gcloud secrets versions access latest --secret=GOOGLE_CLIENT_ID) >> .env
        echo GOOGLE_CLIENT_SECRET=$(gcloud secrets versions access latest --secret=GOOGLE_CLIENT_SECRET) >> .env
        echo GOOGLE_REDIRECT_URI=$(gcloud secrets versions access latest --secret=GOOGLE_REDIRECT_URI) >> .env
        echo JWT_SECRET=$(gcloud secrets versions access latest --secret=JWT_SECRET) >> .env
        echo JWT_EXPIRES_IN=$(gcloud secrets versions access latest --secret=JWT_EXPIRES_IN) >> .env
        echo REDIRECT_FRONT=$(gcloud secrets versions access latest --secret=REDIRECT_FRONT) >> .env

  # Construcción de la imagen con Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/horarios-repo/horarios-cepre-back', '.']

  # Push de la imagen a Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/horarios-repo/horarios-cepre-back']

  # Despliegue en Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'horarios-cepre-back'
      - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/horarios-repo/horarios-cepre-back'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=DATABASE_URL=$(cat .env | grep DATABASE_URL | cut -d "=" -f2)'

options:
  logging: CLOUD_LOGGING_ONLY

